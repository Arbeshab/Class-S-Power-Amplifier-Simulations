################################################################################
##$Date: 2010/06/25 15:58:08 $
##$Revision: 1.2 $
################################################################################
##   ____  ____
##  /   /\/   /
## /___/  \  /
## \   \   \/     Vendor : Xilinx
##  \   \         Version : 1.7
##  /   /         Application : GTX Transceiver Wizard
## /___/   /\     Filename : gtx_output_xmdf.tcl
## \   \  /  \
##  \___\/\___\
##
##
## XMDF file for GTX_OUTPUT
## Generated by Xilinx GTX Transceiver Wizard
##


# The package naming convention is <core_name>_xmdf
package provide gtx_output_xmdf 1.0

# This includes some utilities that support common XMDF operations
package require utilities_xmdf

# Define a namespace for this package. The name of the name space
# is <core_name>_xmdf
namespace eval ::gtx_output_xmdf {
# Use this to define any statics
}

# Function called by client to rebuild the params and port arrays
# Optional when the use context does not require the param or ports
# arrays to be available.
proc ::gtx_output_xmdf::xmdfInit { instance } {
# Variable containg name of library into which module is compiled
# Recommendation: <module_name>
# Required
utilities_xmdf::xmdfSetData $instance Module Attributes Name gtx_output
}
# ::gtx_output_xmdf::xmdfInit

# Function called by client to fill in all the xmdf* data variables
# based on the current settings of the parameters
proc ::gtx_output_xmdf::xmdfApplyParams { instance } {

set fcount 0
# Array containing libraries that are assumed to exist
# Examples include unisim and xilinxcorelib
# Optional
# In this example, we assume that the unisim library will
# be magically
# available to the simulation and synthesis tool
utilities_xmdf::xmdfSetData $instance FileSet $fcount type logical_library
utilities_xmdf::xmdfSetData $instance FileSet $fcount logical_library unisim
incr fcount

utilities_xmdf::xmdfSetData $instance FileSet $fcount relative_path gtx_output.vho
utilities_xmdf::xmdfSetData $instance FileSet $fcount type vhdl_template
incr fcount


utilities_xmdf::xmdfSetData $instance FileSet $fcount relative_path ./gtx_output_tile.vhd
utilities_xmdf::xmdfSetData $instance FileSet $fcount type vhdl
incr fcount


utilities_xmdf::xmdfSetData $instance FileSet $fcount relative_path ./gtx_output.vhd
utilities_xmdf::xmdfSetData $instance FileSet $fcount type vhdl
incr fcount


utilities_xmdf::xmdfSetData $instance FileSet $fcount relative_path gtx_output.xco
utilities_xmdf::xmdfSetData $instance FileSet $fcount type coregen_ip
incr fcount


utilities_xmdf::xmdfSetData $instance FileSet $fcount associated_module gtx_output
incr fcount

}

# ::gen_comp_name_xmdf::xmdfApplyParams

